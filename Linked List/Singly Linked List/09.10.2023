public class SinglyLinkedList {
    private Node head;
    private Node tail;
    private int size;

    public SinglyLinkedList(){
        this.size = 0;
    }

    private class Node{
        private int value;
        private Node next;
        public Node(int value){
            this.value = value;
        }
        public Node(int value,Node next){
            this.value = value;
            this.next = next;
        }
    }


    public void insertFirst(int value){
        Node node = new Node(value);
        node.next = head;
        head = node;
        if(tail == null){
            tail = head;
        }
        size++;
    }


    public void insertLast(int value){
        if(tail == null){
            insertFirst(value);
            return;
        }
        Node node = new Node(value);
        tail.next = node;
        tail = node;
        size++;
    }


    public void insertAtPostion(int value, int position){
        if(position == 0){
            insertFirst(value);
            return;
        }
        if(position == size){
            insertLast(value);
        }
        Node temp = head;
        for(int i = 1; i < position; i++){
            temp = temp.next;
        }
        Node node = new Node(value, temp.next);
        temp.next = node;
        size++;
    }


    public int deleteFirst(){
        int value = head.value;
        head = head.next;
        if(head == null){
            tail = null;
        }
        size--;
        return value;
    }


    public int deleteLast(){
        if(size <= 1){
            return deleteFirst();
        }
        Node secondLast = get(size - 2);
        int value = tail.value;
        tail = secondLast;
        tail.next = null;
        size--;
        return value;
    }
    public Node get(int index){
        Node node = head;
        for(int i = 0; i < index; i++){
            node = node.next;
        }
        return node;
    }

    public int deleteAtPosition(int position){
        if(position == 0){
           return deleteFirst();
        }
        if(position == size - 1){
            return deleteLast();
        }
        Node previous = get(position - 1);
        int value = previous.next.value;
        previous.next = previous.next.next;
        size--;
        return value;
    }


    public boolean search(int target){
        Node temp = head;
        while (temp != null){
            if(temp.value == target){
                return true;
            }
            temp = temp.next;
        }
        return false;
    }


    public void display(){
        Node temp = head;
        while (temp != null){
            System.out.print(temp.value + "-->");
            temp = temp.next;

        }
        System.out.println();
        System.out.println("Size of Singly Linked List is  " + size);
    }



    public static void main(String[] args) {
        SinglyLinkedList list = new SinglyLinkedList();
        list.insertFirst(3);
        list.insertFirst(4);
        list.insertFirst(5);
        list.insertFirst(6);
        list.insertLast(9);
        list.insertAtPostion(10,3);
        System.out.println(list.search(6));
        list.display();
        list.deleteFirst();
        list.deleteLast();
        list.display();
        list.deleteAtPosition(2);
        list.display();
    }
}
